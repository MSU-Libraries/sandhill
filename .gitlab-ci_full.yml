image: docker:stable
services:
  - docker:dind

stages:
  - build
  - test
  - stage
  - release
  - deploy

variables:
  CONTAINER_TEST_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  CONTAINER_RELEASE_IMAGE: $CI_REGISTRY_IMAGE:latest
  PATH_TEST: "/var/www/sandhill/"
  PATH_STAGE: "/var/www/sandhill/"
  PATH_PROD: "/var/www/sandhill/"
  CONNECT_TEST: "deploy@fedcomd4.lib.msu.edu"
  CONNECT_STAGE: "deploy@fedcoms4.lib.msu.edu"
  CONNECT_PROD1: "deploy@fedcom4a.lib.msu.edu"
  CONNECT_PROD2: "deploy@fedcom4b.lib.msu.edu"
  SITE_TEST: "https://sandhill.test.lib.msu.edu/"
  SITE_STAGE: "https://sandhill.stage.lib.msu.edu/"
  SITE_PROD: "https://sandhill.lib.msu.edu/"


before_script:
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

build:
  stage: build
  tags:
    - msul
  only:
    - development
  script:
    - docker build --pull -t $CONTAINER_TEST_IMAGE .
    - docker push $CONTAINER_TEST_IMAGE

test:
  stage: test
  tags:
    - msul
  only:
    - development
  script: 
    - ssh $CONNECT_TEST cd $PATH_DEVEL && docker-compose down
    - ssh $CONNECT_TEST cd $PATH_DEVEL && docker pull $CONTAINER_TEST_IMAGE
    - ssh $CONNECT_TEST cd $PATH_DEVEL && docker-compose up -d
    - sleep 4
    - ssh $CONNECT_TEST "[[ $( curl -s -o /dev/null -I -w \"%{http_code}\" $SITE_TEST ) -eq 200 ]]"

stage:
  stage: stage
  tags:
    - msul
  only:
    - stage
  script: 
    - ssh $CONNECT_STAGE cd $PATH_DEVEL && docker-compose down
    - ssh $CONNECT_STAGE cd $PATH_DEVEL && docker pull $CONTAINER_TEST_IMAGE
    - ssh $CONNECT_STAGE cd $PATH_DEVEL && docker-compose up -d
    - sleep 4
    - ssh $CONNECT_STAGE "[[ $( curl -s -o /dev/null -I -w \"%{http_code}\" $SITE_STAGE ) -eq 200 ]]"

release:
  stage: release
  script:
    - docker pull $CONTAINER_TEST_IMNAGE
    - docker tag $CONTAINER_TEST_IMAGE $CONTAINER_RELEASE_IMAGE
    - docker push $CONTAINER_RELEASE_IMAGE
  only:
    - master

deploy_primary:
  stage: deploy
  only:
    - master
  tags:
    - msul
  script: 
    - ssh $CONNECT_PROD1 cd $PATH_DEVEL && docker-compose down
    - ssh $CONNECT_PROD1 cd $PATH_DEVEL && docker pull $CONTAINER_RELEASE_IMAGE
    - ssh $CONNECT_PROD1 cd $PATH_DEVEL && docker-compose up -d
    - sleep 4
    - ssh $CONNECT_PROD1 "[[ $( curl -s -o /dev/null -I -w \"%{http_code}\" $SITE_PROD ) -eq 200 ]]"

deploy_mirror:
  stage: deploy
  only:
    - master
  tags:
    - msul
  script: 
    - ssh $CONNECT_PROD2 cd $PATH_DEVEL && docker-compose down
    - ssh $CONNECT_PROD2 cd $PATH_DEVEL && docker pull $CONTAINER_RELEASE_IMAGE
    - ssh $CONNECT_PROD2 cd $PATH_DEVEL && docker-compose up -d
    - sleep 4
    - ssh $CONNECT_PROD2 "[[ $( curl -s -o /dev/null -I -w \"%{http_code}\" $SITE_PROD ) -eq 200 ]]"
