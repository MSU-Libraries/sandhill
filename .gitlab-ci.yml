image: docker:stable
services:
  - docker:dind

stages:
  - unittest_and_lint
  - scan
  - build

variables:
  CONTAINER_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA

before_script:
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

unittest_and_lint_job:
  stage: unittest_and_lint
  tags:
    - msul
  script:
    - virtualenv -p python3 $CI_PROJECT_DIR/env
    - $CI_PROJECT_DIR/env/bin/pip install -r $CI_PROJECT_DIR/requirements.txt
    - $CI_PROJECT_DIR/env/bin/pylint-fail-under --fail_under 10.00 sandhill/
    - $CI_PROJECT_DIR/env/bin/pytest --junitxml=report.xml
  artifacts:
    when: always
    reports:
      junit: report.xml

## Use to populate Code Quality report
#code_quality:
#  stage: scan
#  tags:
#    - msul
#  artifacts:
#    reports:
#      codequality: gl-code-quality-report.json

## Used to populate the Code Quality html report
## Can't be used at the same time as the other
## code_quality job (as the job name must be 
## 'code_quality' for the template to recognize it
## and we can't have duplicate job names.
code_quality:
  stage: scan
  tags:
    - msul
  variables:
    REPORT_FORMAT: html
  allow_failure: false
  artifacts:
    paths: [gl-code-quality-report.html]

sast:
  stage: scan
  tags:
    - msul
  allow_failure: false
  image: registry.gitlab.com/gitlab-org/gl-sast:latest
  script:
    - docker run 
        --env SAST_CONFIDENCE_LEVEL="${SAST_CONFIDENCE_LEVEL:-3}" 
        --env SAST_DISABLE_REMOTE_CHECKS="${SAST_DISABLE_REMOTE_CHECKS:-false}" 
        --env SECURE_LOG_LEVEL="warn"
        --env SAST_BANDIT_EXCLUDED_PATHS="*/tests/*, */env/*"
        --volume "$PWD:/code" 
        --volume /var/run/docker.sock:/var/run/docker.sock 
        "registry.gitlab.com/gitlab-org/security-products/sast:11-2-stable" /app/bin/run /code
  artifacts:
    paths: [gl-sast-report.json]
    reports:
      sast: gl-sast-report.json

include:
  - template: Code-Quality.gitlab-ci.yml

build_job:
  stage: build
  tags:
    - msul
  only:
    - master
  script:
    - docker build --pull -t $CONTAINER_IMAGE .
    - docker push $CONTAINER_IMAGE
