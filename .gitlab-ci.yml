image: docker:stable
services:
  - docker:dind

stages:
  - unittest_and_lint
  - scan
  - build
  - deploy_test
  - release
  - deploy_stage
  - deploy_prod

variables:
  CONTAINER_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
  CONTAINER_IMAGE_NGINX: $CI_REGISTRY_IMAGE/nginx:$CI_COMMIT_SHORT_SHA
  REPO_PATH: "/home/deploy/sandhill"
  CONNECT_TEST: "deploy@fedcomd4.lib.msu.edu"
  CONNECT_STAGE: "deploy@fedcoms4.lib.msu.edu"
  CONNECT_PROD1: "deploy@fedcom4a.lib.msu.edu"
  CONNECT_PROD2: "deploy@fedcom4b.lib.msu.edu"

before_script:
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

unittest_and_lint_job:
  stage: unittest_and_lint
  tags:
    - msul
  script:
    - virtualenv -p python3 $CI_PROJECT_DIR/env
    - $CI_PROJECT_DIR/env/bin/pip install -r $CI_PROJECT_DIR/requirements.txt
    - $CI_PROJECT_DIR/env/bin/pytest
    - $CI_PROJECT_DIR/env/bin/pylint-fail-under --fail_under 10.00 sandhill/

code_quality:
  stage: scan
  tags:
    - msul
  artifacts:
    reports:
      codequality: gl-code-quality-report.json

# NOTE: Can't have both this and `code_quality` job enabled at the same time.
# This job will save the quality report to a pretty html document that
# allows filtering.
#code_quality_report:
#  stage: scan
#  tags:
#    - msul
#  variables:
#    REPORT_FORMAT: html
#  artifacts:
#    paths: [gl-code-quality-report.html]


include:
  - template: Code-Quality.gitlab-ci.yml

sast:
  stage: scan
  tags:
    - msul
  image: registry.gitlab.com/gitlab-org/gl-sast:latest
  script:
    - docker run 
        --env SAST_CONFIDENCE_LEVEL="${SAST_CONFIDENCE_LEVEL:-3}" 
        --env SAST_DISABLE_REMOTE_CHECKS="${SAST_DISABLE_REMOTE_CHECKS:-false}" 
        --volume "$PWD:/code" 
        --volume /var/run/docker.sock:/var/run/docker.sock 
        "registry.gitlab.com/gitlab-org/security-products/sast:11-2-stable" /app/bin/run /code
  artifacts:
    paths: [gl-sast-report.json]
    reports:
      sast: gl-sast-report.json


build_job:
  stage: build
  tags:
    - msul
  only:
    - master
  script:
    - docker build --pull -t $CONTAINER_IMAGE .
    - docker push $CONTAINER_IMAGE
    - docker build --pull -t $CONTAINER_IMAGE_NGINX ./nginx
    - docker push $CONTAINER_IMAGE_NGINX

deploy_test_job:
  stage: deploy_test
  tags:
    - msul
  environment:
    name: test
    url: http://sandhill.test.lib.msu.edu
  only:
    - master
  script: 
    - ssh $CONNECT_TEST git -C $REPO_PATH reset HEAD --hard
    - ssh $CONNECT_TEST git -C $REPO_PATH fetch origin
    - ssh $CONNECT_TEST git -C $REPO_PATH checkout $CI_COMMIT_SHORT_SHA
    - ssh $CONNECT_TEST docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - ssh $CONNECT_TEST echo "Replacing _TAG_ with $CI_COMMIT_SHORT_SHA in docker-compose.yml"
    - ssh $CONNECT_TEST sed -i "s/_TAG_/$CI_COMMIT_SHORT_SHA/g" $REPO_PATH/docker-compose.yml
    - ssh $CONNECT_TEST sudo /bin/cp $REPO_PATH/etc/systemd/system/sandhill-stack.test.service /etc/systemd/system/
    - ssh $CONNECT_TEST sudo /bin/systemctl daemon-reload
    - ssh $CONNECT_TEST sudo /bin/systemctl enable sandhill-stack.test
    - ssh $CONNECT_TEST docker-compose -f $REPO_PATH/docker-compose.yml -f $REPO_PATH/docker-compose.test.yml pull
    - ssh $CONNECT_TEST sudo /bin/systemctl restart sandhill-stack.test
    - sleep 8
    - ssh $CONNECT_TEST sudo /bin/systemctl status sandhill-stack.test
    - ssh $CONNECT_TEST "docker exec sandhill pytest -m functional --no-cov"

deploy_stage_job:
  stage: deploy_stage
  tags:
    - msul
  environment:
    name: stage
    url: http://sandhill.stage.lib.msu.edu
  when: manual
  dependencies:
    - deploy_test_job
  only:
    - master
  script:
    - ssh $CONNECT_STAGE git -C $REPO_PATH reset HEAD --hard
    - ssh $CONNECT_STAGE git -C $REPO_PATH fetch origin
    - ssh $CONNECT_STAGE git -C $REPO_PATH checkout $CI_COMMIT_SHORT_SHA
    - ssh $CONNECT_STAGE docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - ssh $CONNECT_STAGE echo "Replacing _TAG_ with $CI_COMMIT_SHORT_SHA in docker-compose.yml"
    - ssh $CONNECT_STAGE sed -i "s/_TAG_/$CI_COMMIT_SHORT_SHA/g" $REPO_PATH/docker-compose.yml
    - ssh $CONNECT_STAGE sudo cp $REPO_PATH/etc/systemd/system/sandhill-stack.stage.service /etc/systemd/system/
    - ssh $CONNECT_STAGE sudo systemctl daemon-reload
    - ssh $CONNECT_STAGE sudo systemctl enable sandhill-stack.stage
    - ssh $CONNECT_STAGE docker-compose -f $REPO_PATH/docker-compose.yml -f $REPO_PATH/docker-compose.stage.yml pull
    - ssh $CONNECT_STAGE sudo systemctl restart sandhill-stack.stage
    - sleep 8
    - ssh $CONNECT_STAGE sudo systemctl status sandhill-stack.stage
    - ssh $CONNECT_STAGE "docker exec sandhill pytest -m functional --no-cov"

deploy_prod_primary_job:
  stage: deploy_prod
  tags:
    - msul
  environment:
    name: production
    url: http://sandhill.lib.msu.edu
  when: manual
  only:
    - master
  dependencies:
    - deploy_stage_job
  script:
    - ssh $CONNECT_PROD1 git -C $REPO_PATH reset HEAD --hard
    - ssh $CONNECT_PROD1 git -C $REPO_PATH fetch origin
    - ssh $CONNECT_PROD1 git -C $REPO_PATH checkout $CI_COMMIT_SHORT_SHA
    - ssh $CONNECT_PROD1 docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - ssh $CONNECT_PROD1 echo "Replacing _TAG_ with $CI_COMMIT_SHORT_SHA in docker-compose.yml"
    - ssh $CONNECT_PROD1 sed -i "s/_TAG_/$CI_COMMIT_SHORT_SHA/g" $REPO_PATH/docker-compose.yml
    - ssh $CONNECT_PROD1 sudo cp $REPO_PATH/etc/systemd/system/sandhill-stack.service /etc/systemd/system/
    - ssh $CONNECT_PROD1 sudo systemctl daemon-reload
    - ssh $CONNECT_PROD1 sudo systemctl enable sandhill-stack
    - ssh $CONNECT_PROD1 docker-compose -f $REPO_PATH/docker-compose.yml pull
    - ssh $CONNECT_PROD1 sudo systemctl restart sandhill-stack
    - sleep 8
    - ssh $CONNECT_PROD1 sudo systemctl status sandhill-stack
    - ssh $CONNECT_PROD1 "docker exec sandhill pytest -m functional --no-cov"

deploy_prod_secondary_job:
  stage: deploy_prod
  tags:
    - msul
  environment:
    name: production secondary
    url: http://sandhillm.lib.msu.edu
  when: manual
  only:
    - master
  dependencies:
    - deploy_stage_job
  script:
    - ssh $CONNECT_PROD2 git -C $REPO_PATH reset HEAD --hard
    - ssh $CONNECT_PROD2 git -C $REPO_PATH fetch origin
    - ssh $CONNECT_PROD2 git -C $REPO_PATH checkout $CI_COMMIT_SHORT_SHA
    - ssh $CONNECT_PROD2 docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - ssh $CONNECT_PROD2 echo "Replacing _TAG_ with $CI_COMMIT_SHORT_SHA in docker-compose.yml"
    - ssh $CONNECT_PROD2 sed -i "s/_TAG_/$CI_COMMIT_SHORT_SHA/g" $REPO_PATH/docker-compose.yml
    - ssh $CONNECT_PROD2 sudo cp $REPO_PATH/etc/systemd/system/sandhill-stack.service /etc/systemd/system/
    - ssh $CONNECT_PROD2 sudo systemctl daemon-reload
    - ssh $CONNECT_PROD2 sudo systemctl enable sandhill-stack
    - ssh $CONNECT_PROD2 docker-compose -f $REPO_PATH/docker-compose.yml pull
    - ssh $CONNECT_PROD2 sudo systemctl restart sandhill-stack
    - sleep 8
    - ssh $CONNECT_PROD2 sudo systemctl status sandhill-stack
    - ssh $CONNECT_PROD2 "docker exec sandhill pytest -m functional --no-cov"

