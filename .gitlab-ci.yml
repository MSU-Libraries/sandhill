image: docker:stable
services:
  - docker:dind

stages:
  - unittest_and_lint
  - build
  - tag
  - release

variables:
  CONTAINER_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA

before_script:
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

Unit Testing and Linting:
  stage: unittest_and_lint
  tags:
    - msul
  script:
    - virtualenv -p python3 $CI_PROJECT_DIR/env
    - $CI_PROJECT_DIR/env/bin/pip install -r $CI_PROJECT_DIR/requirements.txt
    - $CI_PROJECT_DIR/env/bin/pylint-fail-under --fail_under 10.00 sandhill/
    - $CI_PROJECT_DIR/env/bin/pytest --junitxml=report.xml
  artifacts:
    when: always
    reports:
      junit: report.xml

Build Image:
  stage: build
  tags:
    - msul
  only:
    - master
  script:
    - docker build --pull -t registry.gitlab.msu.edu/msu-libraries/repo-team/sandhill:latest .
    - docker push registry.gitlab.msu.edu/msu-libraries/repo-team/sandhill:latest

Tag Release:
  stage: tag
  tags:
    - msul
  when: manual
  only:
    - master
  script:
    - major_ver=$(date +'%y.%-m')
    - patch_ver=$(($(git tag -l $major_ver* --sort=-v:refname | head -n 1 | cut -d'.' -f 3)+1))
    - new_ver=$major_ver.$patch_ver
    - echo "Tagging new release with $new_ver"
    - git tag $new_ver
    - git remote add gitlab https://gitlab-ci-token:$RW_CICD_TOKEN@gitlab.msu.edu/msu-libraries/repo-team/sandhill.git
    - git push gitlab --tags

Release to GitHub:
  stage: release
  tags:
    - msul
  when: manual
  only:
    - master
  script:
    - rm -rf sandhill.git
    - git clone --mirror git@gitlab.msu.edu:msu-libraries/repo-team/sandhill.git
    - cd sandhill.git
    - git push --force --mirror git@github.com:MSU-Libraries/sandhill.git
