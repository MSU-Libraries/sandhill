image: docker:stable
services:
  - docker:dind

stages:
  - unittest
  - build
  - deploy_test
  - deploy_stage
  - deploy_prod

variables:
  CONTAINER_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
  CONTAINER_IMAGE_NGINX: $CI_REGISTRY_IMAGE/nginx:$CI_COMMIT_SHORT_SHA
  PATH_TEST: "/home/deploy/sandhill"
  PATH_STAGE: "/home/deploy/sandhill"
  PATH_PROD: "/home/deploy/sandhill"
  CONNECT_TEST: "deploy@fedcomd4.lib.msu.edu"
  CONNECT_STAGE: "deploy@fedcoms4.lib.msu.edu"
  CONNECT_PROD1: "deploy@fedcom4a.lib.msu.edu"
  CONNECT_PROD2: "deploy@fedcom4b.lib.msu.edu"
  SITE_TEST: "http://sandhill.test.lib.msu.edu/"
  SITE_STAGE: "http://sandhill.stage.lib.msu.edu/"
  SITE_PROD: "http://sandhill.lib.msu.edu/"
  SITE_PROD2: "http://sandhillm.lib.msu.edu/"

before_script:
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

unittest_job:
  stage: unittest
  tags:
    - msul
  except:
    - stage
    - master
  script:
    - virtualenv -p python3 $CI_PROJECT_DIR/env
    - $CI_PROJECT_DIR/env/bin/pip install -r $CI_PROJECT_DIR/requirements.txt
    - $CI_PROJECT_DIR/env/bin/pytest

build_job:
  stage: build
  tags:
    - msul
  only:
    - development
  script:
    - docker build --pull -t $CONTAINER_IMAGE .
    - docker push $CONTAINER_IMAGE
    - docker build --pull -t $CONTAINER_IMAGE_NGINX ./nginx
    - docker push $CONTAINER_IMAGE_NGINX

deploy_test_job:
  stage: deploy_test
  tags:
    - msul
  only:
    - development
  environment:
    name: test
    url: http://sandhill.test.lib.msu.edu
  script: 
    - ssh $CONNECT_TEST git -C $PATH_TEST fetch origin
    - ssh $CONNECT_TEST git -C $PATH_TEST checkout $CI_COMMIT_SHORT_SHA
    - ssh $CONNECT_TEST docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - ssh $CONNECT_TEST sed -i 's/${TAG}/$CI_COMMIT_SHORT_SHA/g' etc/systemd/system/sandhill-stack.test.service
    - ssh $CONNECT_TEST sudo /bin/cp $PATH_TEST/etc/systemd/system/sandhill-stack.test.service /etc/systemd/system/
    - ssh $CONNECT_TEST sudo /bin/systemctl daemon-reload
    - ssh $CONNECT_TEST sudo /bin/systemctl enable sandhill-stack.test
    - ssh $CONNECT_TEST "(echo 'TAG=$CI_COMMIT_SHORT_SHA' > $PATH_TEST/.env)"
    - ssh $CONNECT_TEST docker-compose -f $PATH_TEST/docker-compose.yml -f $PATH_TEST/docker-compose.test.yml pull
    - ssh $CONNECT_TEST sudo /bin/systemctl restart sandhill-stack.test
    - sleep 4
    - ssh $CONNECT_TEST sudo /bin/systemctl status sandhill-stack.test
    - ssh $CONNECT_TEST "[[ $( curl -s -o /dev/null -I -w \"%{http_code}\" $SITE_TEST ) -eq 200 ]]"

deploy_stage_job:
  stage: deploy_stage
  tags:
    - msul
  only:
    - stage
  environment:
    name: stage
    url: http://sandhill.stage.lib.msu.edu
  script:
    - ssh $CONNECT_STAGE git -C $PATH_STAGE fetch origin
    - ssh $CONNECT_STAGE git -C $PATH_STAGE checkout $CI_COMMIT_SHORT_SHA
    - ssh $CONNECT_STAGE docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - ssh $CONNECT_STAGE sudo cp $PATH_STAGE/etc/systemd/system/sandhill-stack.stage.service /etc/systemd/system/
    - ssh $CONNECT_STAGE sudo systemctl daemon-reload
    - ssh $CONNECT_STAGE sudo systemctl enable sandhill-stack.stage
    - ssh $CONNECT_STAGE "(echo 'TAG=$CI_COMMIT_SHORT_SHA' > $PATH_STAGE/.env)"
    - ssh $CONNECT_STAGE docker-compose -f $PATH_STAGE/docker-compose.yml -f $PATH_STAGE/docker-compose.stage.yml pull
    - ssh $CONNECT_STAGE sudo systemctl restart sandhill-stack.stage
    - sleep 4
    - ssh $CONNECT_STAGE sudo systemctl status sandhill-stack.stage
    - ssh $CONNECT_STAGE "[[ $( curl -s -o /dev/null -I -w \"%{http_code}\" $SITE_STAGE ) -eq 200 ]]"

deploy_prod_primary_job:
  stage: deploy_prod
  tags:
    - msul
  only:
    - master
  environment:
    name: prod_primary
    url: http://sandhill.lib.msu.edu
  script:
    - ssh $CONNECT_PROD1 git -C $PATH_PROD fetch origin
    - ssh $CONNECT_PROD1 git -C $PATH_PROD checkout $CI_COMMIT_SHORT_SHA
    - ssh $CONNECT_PROD1 docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - ssh $CONNECT_PROD1 sudo cp $PATH_PROD/etc/systemd/system/sandhill-stack.service /etc/systemd/system/
    - ssh $CONNECT_PROD1 sudo systemctl daemon-reload
    - ssh $CONNECT_PROD1 sudo systemctl enable sandhill-stack
    - ssh $CONNECT_PROD1 "(echo 'TAG=$CI_COMMIT_SHORT_SHA' > $PATH_PROD1/.env)"
    - ssh $CONNECT_PROD1 docker-compose -f $PATH_PROD/docker-compose.yml pull
    - ssh $CONNECT_PROD1 sudo systemctl restart sandhill-stack
    - sleep 4
    - ssh $CONNECT_PROD1 sudo systemctl status sandhill-stack
    - ssh $CONNECT_PROD1 "[[ $( curl -s -o /dev/null -I -w \"%{http_code}\" $SITE_PROD ) -eq 200 ]]"

deploy_prod_secondary_job:
  stage: deploy_prod
  tags:
    - msul
  only:
    - master
  environment:
    name: prod_secondary
    url: http://sandhillm.lib.msu.edu
  script:
    - ssh $CONNECT_PROD2 git -C $PATH_PROD fetch origin
    - ssh $CONNECT_PROD2 git -C $PATH_PROD checkout $CI_COMMIT_SHORT_SHA
    - ssh $CONNECT_PROD2 docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - ssh $CONNECT_PROD2 sudo cp $PATH_PROD/etc/systemd/system/sandhill-stack.service /etc/systemd/system/
    - ssh $CONNECT_PROD2 sudo systemctl daemon-reload
    - ssh $CONNECT_PROD2 sudo systemctl enable sandhill-stack
    - ssh $CONNECT_PROD2 "(echo 'TAG=$CI_COMMIT_SHORT_SHA' > $PATH_PROD2/.env)"
    - ssh $CONNECT_PROD2 docker-compose -f $PATH_PROD/docker-compose.yml pull
    - ssh $CONNECT_PROD2 sudo systemctl restart sandhill-stack
    - sleep 4
    - ssh $CONNECT_PROD2 sudo systemctl status sandhill-stack
    - ssh $CONNECT_PROD2 "[[ $( curl -s -o /dev/null -I -w \"%{http_code}\" $SITE_PROD2 ) -eq 200 ]]"
