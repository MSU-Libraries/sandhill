stages:
  - Testing and Linting
  - Build
  - Prepare
  - Tag
  - Create Release
  - Release

variables:
  CONTAINER_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA

before_script:
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

Unit Testing and Linting:
  stage: Testing and Linting
  tags:
    - msul
  script:
    - virtualenv -p python3 $CI_PROJECT_DIR/env
    - $CI_PROJECT_DIR/env/bin/pip install -r $CI_PROJECT_DIR/requirements.txt
    - $CI_PROJECT_DIR/env/bin/pylint-fail-under --fail_under 10.00 sandhill/
    - $CI_PROJECT_DIR/env/bin/pytest --junitxml=report.xml
  artifacts:
    when: always
    reports:
      junit: report.xml

Build Image:
  stage: Build
  tags:
    - msul
  only:
    - master
  script:
    - docker build --pull -t registry.gitlab.msu.edu/msu-libraries/repo-team/sandhill:latest .
    - docker push registry.gitlab.msu.edu/msu-libraries/repo-team/sandhill:latest

Prepare Release:
  stage: Prepare
  tags:
   - msul
  only: 
    - master
  except:
    - tags
  script:
    - major_ver=$(date +'%y.%-m')
    - latest_patch=$(git tag -l $major_ver* --sort=-v:refname | head -n 1 | cut -d'.' -f 3)
    - "[ -z $latest_patch ] && cur_patch=-1 || cur_patch=$latest_patch"
    - patch_ver=$(($cur_patch+1))
    - new_ver=$major_ver.$patch_ver
    - echo "Tagging new release with $new_ver"
    - echo "TAG=$new_ver" >> variables.env
  artifacts:
    reports:
      dotenv: variables.env

Tag Release:
  stage: Tag
  tags:
    - msul
  when: manual
  only: 
    - master
  except:
    - tags
  needs:
    - job: Prepare Release
      artifacts: true
  script:
    - git tag $TAG
    - git remote add gitlab https://gitlab-ci-token:$RW_CICD_TOKEN@gitlab.msu.edu/msu-libraries/repo-team/sandhill.git || true
    - git push gitlab --tags

GitLab Release:
  stage: Create Release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  tags:
    - msul-docker
  when: manual
  only: 
    - master
  except:
    - tags
  needs:
    - job: Prepare Release
      artifacts: true
  script:
    - echo 'Creating GitLab release $TAG'
  release:
    tag_name: '$TAG'
    description: 'Release $TAG'


Release to GitHub:
  stage: Release
  tags:
    - msul
  when: manual
  only:
    - master
  script:
    - rm -rf sandhill.git
    - git clone --mirror git@gitlab.msu.edu:msu-libraries/repo-team/sandhill.git
    - cd sandhill.git
    - git push --force --mirror git@github.com:MSU-Libraries/sandhill.git
